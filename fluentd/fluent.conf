<source>
  @id source
  @type tail
  path \Users\m1mathew\IdeaProjects\SampleFluentLogger\fluentd\logs\output.txt
  pos_file \Users\m1mathew\IdeaProjects\SampleFluentLogger\fluentd\logs\audit.log.pos
  time_format %Y-%m-%dT%H:%M:%S.%NZ
  tag kubernetes.*
  read_from_head true
  format json
</source>
<filter kubernetes.**>
  @id first_filter
  @type concat
  key log
  separator ""
  stream_identity_key tag
  multiline_start_regexp /^time=/
  flush_interval 5
  timeout_label @NORMAL
</filter>
<match **>
  @type relabel
  @label @NORMAL
</match>
<label @NORMAL>
    <match kubernetes.**>
      @id match_kubernetes1
      @type rewrite_tag_filter
      <rule>
        key log
        pattern tag=AUDIT_LOG
        tag AUDIT_LOG.*
      </rule>
      <rule>
        key log
        pattern ^time=".*?".*
        tag daas_service.${tag}
      </rule>
      <rule>
        key log
        pattern ^time=".*?".*
        tag other_service.${tag}
        invert true
      </rule>
    </match>
    <match AUDIT_LOG.*>
      @id match_stdout
      @type stdout
    </match>
    <match AUDIT_LOG.*>
        @type file
        path \Users\m1mathew\IdeaProjects\SampleFluentLogger\fluentd\logs\generated-audit
        append true
        flush_at_shutdown true
        output_tag false
        <buffer time>
          @type file
          path \Users\m1mathew\IdeaProjects\SampleFluentLogger\fluentd\logs\audit.log.buffer
          timekey_use_utc true
          flush_mode interval
          flush_thread_count 2
          flush_interval 5s
          retry_type periodic
          retry_max_times 5
          retry_wait 10s
          chunk_limit_size 10M
          total_limit_size 10G
          queued_chunks_limit_size 100
          overflow_action throw_exception
        </buffer>
        <format>
          @type json
        </format>
    </match>
    # Enriches records with Kubernetes metadata
    <filter {daas_service,other_service}.kubernetes.**>
      @id match_kubernetes2
      @type kubernetes_metadata
    </filter>
    <filter daas_service.kubernetes.**>
      @id match_kubernetes3
      @type kvp
      parse_key log
      fields_key log_field
      pattern "([a-zA-Z_-]\\w*)=((['\"])(?:^(?:\\3)|[^\\\\]|\\\\.)*?(\\3)|[\\w.@$%/+-]*)"
    </filter>
    <filter daas_service.kubernetes.**>
      @id match_kubernetes4
      @type record_modifier
      <record>
        dummy ${if record.has_key?('log_field') and record['log_field'].has_key?('time'); record['@timestamp']=record['log_field']['time']; record['log_field'].delete('time'); end; nil}
        dummy2 ${begin; t = Time.parse record['@timestamp']; record['@timestamp'] = t.utc.strftime('%Y-%m-%dT%H:%M:%S.%3NZ'); rescue; record.delete('@timestamp'); end; nil}
      </record>
      remove_keys dummy,dummy2
    </filter>
    <filter haproxy.**>
      @id match_haproxy
      @type parser
      key_name message
      reserve_data true
      reserve_time true
      emit_invalid_record_to_error false
      <parse>
        @type multi_format
        <pattern>
          format regexp
          expression /^(?<remoteAddress>[\w\.]+:\d+) \[(?<requestDate>[^\]]*)\] httpfront-(?<domain>[\w-.]+)~ (?<namespace>kube-system|[\w]+)-(?<service>[\w-]+)(-[\d]+)?\/[\w-]+ (?<requestReadTime>\d+)\/(?<waitTime>\d+)\/(?<backendConnectTime>\d+)\/(?<backendResponseTime>\d+)\/(?<responseTime>\d+) (?<statusCode>\d+) (?<responseBytes>\d+) (?<reqCookie>[\w-]+) (?<resCookie>[\w-]+) (?<terminationState>[\w-]+) (?<actconn>\d+)\/(?<feconn>\d+)\/(?<beconn>\d+)\/(?<srvconn>\d+)\/(?<retries>\d+) (?<srvqueue>\d+)\/(?<backendQueue>\d+) "(?<method>[A-Z]+) (?<url>[^ ]+) (?<httpVersion>[^ ]+)"$/
        </pattern>
        <pattern>
          format regexp
          # Examples:
          # Connect from 172.20.59.142:13201 to 172.20.59.142:31916 (httpfront/HTTP)
          # Connect from 10.0.1.2:33312 to 10.0.3.31:8012 (www/HTTP)
          expression /^Connect from (?<remoteAddress>[\w\.]+:\d+) to (?<backendAddress>[\w\.]+:\d+) \((?<frontend>[\w]+)\/(?<mode>[\w]+)\)$/
        </pattern>
        <pattern>
          format regexp
          # Examples:
          # Server kube-system-fluentd-http-http-input/server0002 is going DOWN for maintenance. 3 active and 0 backup servers left. 0 sessions active, 0 requeued, 0 remaining in queue.
          # Server kube-system-fluentd-http-http-input/server0001 is going DOWN for maintenance. 2 active and 0 backup servers left. 0 sessions active, 0 requeued, 0 remaining in queue.
          expression /^Server (?<namespace>kube-system|[\w]+)-(?<service>[\w-]+)\/[\w-]+ is going DOWN for maintenance. (?<remainingActive>\d+) active and (?<remainingBackup>\d+) backup servers left. (?<activeSessions>\d+) sessions active, (?<requeued>\d+) requeued, (?<remainingInQueue>\d+) remaining in queue.$/
        </pattern>
        <pattern>
          format regexp
          # Examples:
          # Server kube-system-fluentd-http-http-input/server0003 is DOWN, reason: Layer4 connection problem, info: \"Connection refused\", check duration: 0ms. 2 active and 0 backup servers left. 0 sessions active, 0 requeued, 0 remaining in queue.
          # Server kube-system-fluentd-http-http-input/server0003 is UP, reason: Layer4 check passed, check duration: 0ms. 3 active and 0 backup servers online. 0 sessions requeued, 0 total in queue.
          expression /^Server (?<namespace>kube-system|[\w]+)-(?<service>[\w-]+)\/[\w-]+ is (?<status>[\w]+), reason: (?<reason>[^,]+), (info: "(?<info>[^"]+)", )?check duration: (?<checkDuration>[^.]+). (?<remainingActive>\d+) active and (?<remainingBackup>\d+) backup servers (left|online). ((?<activeSessions>\d+) sessions active, )?(?<requeued>\d+) (sessions )?requeued, (?<remainingInQueue>\d+) (remaining|total) in queue.$/
        </pattern>
      </parse>
    </filter>
    <match **>
        @type file
        path \Users\m1mathew\IdeaProjects\SampleFluentLogger\fluentd\logs\generated
        append true
        flush_at_shutdown true
        output_tag false
        <buffer time>
          @type file
          path \Users\m1mathew\IdeaProjects\SampleFluentLogger\fluentd\logs\generated.log.buffer
          timekey_use_utc true
          flush_mode interval
          flush_thread_count 2
          flush_interval 5s
          retry_type periodic
          retry_max_times 5
          retry_wait 10s
          chunk_limit_size 10M
          total_limit_size 10G
          queued_chunks_limit_size 100
          overflow_action throw_exception
        </buffer>
        <format>
          @type json
        </format>
    </match>
</label>
